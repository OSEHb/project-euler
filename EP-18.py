'''Задача 18.'''
# Начиная в вершине треугольника (см. пример ниже) и перемещаясь вниз на смежные числа,
# максимальная сумма до основания составляет 23.
#
#    3
#   7 4
#  2 4 6
# 8 5 9 3
#
# То есть, 3 + 7 + 4 + 9 = 23.
# Найдите максимальную сумму пути от вершины до основания следующего треугольника:

table = {1.1: [75],
         2.1: [95, 64],
         3.1: [17, 47, 82],
         4.1: [18, 35, 87, 10],
         5.1: [20, 4, 82, 47, 65],
         6.1: [19, 1, 23, 75, 3, 34],
         7.1: [88, 2, 77, 73, 7, 63, 67],
         8.1: [99, 65, 4, 28, 6, 16, 70, 92],
         9.1: [41, 41, 26, 56, 83, 40, 80, 70, 33],
         10.1: [41, 48, 72, 33, 47, 32, 37, 16, 94, 29],
         11.1: [53, 71, 44, 65, 25, 43, 91, 52, 97, 51, 14],
         12.1: [70, 11, 33, 28, 77, 73, 17, 78, 39, 68, 17, 57],
         13.1: [91, 71, 52, 38, 17, 14, 91, 43, 58, 50, 27, 29, 48],
         14.1: [63, 66, 4, 68, 89, 53, 67, 30, 73, 16, 69, 87, 40, 31],
         15.1: [4, 62, 98, 27, 23, 9, 70, 98, 73, 93, 38, 53, 60, 4, 23],
         16.1: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}

a = 1.1
b = 0
maxvay = 75

while True:
    if a == 15.1:
        break

    longway_1 = 0
    longway_2 = 0
    way_1 = maxvay + table[a + 1][b]
    way_1_1 = way_1 + table[a + 2][b]
    way_1_2 = way_1 + table[a + 2][b + 1]

    if way_1_1 > way_1_2:
        longway_1 = way_1_1
    else:
        longway_1 = way_1_2

    way_2 = maxvay + table[a + 1][b + 1]
    way_2_1 = way_2 + table[a + 2][b + 1]
    way_2_2 = way_2 + table[a + 2][b + 2]

    if way_2_1 > way_2_2:
        longway_2 = way_2_1
    else:
        longway_2 = way_2_2

    if longway_1 > longway_2:
        maxvay = way_1
        a += 1
    else:
        maxvay = way_2
        a += 1
        b += 1

print(maxvay)